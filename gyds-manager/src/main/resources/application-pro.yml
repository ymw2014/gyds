filedo:
  uploadPath: D:/var/uploaded_files/
logging:
  level:
    root: info
    com.fly: debug
    com.fly.**.dao: debug
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    #url: jdbc:mysql://122.114.82.200:3306/gyds?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    url: jdbc:mysql://192.168.124.101:3306/gyds?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: root
    initialSize: 10
    minIdle: 10
    maxActive: 30
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  redis:
      host: localhost
      port: 6379
      password: M2d59ef9fe$
      # 连接超时时间（毫秒）
      timeout: 10000
      jedis:
        pool:
          # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池中的最小空闲连接
          min-idle: 10
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 100
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
      database: 6
wx:
  appid: wx77dfab0ba32b06ea
  secret: 0f23e16494e0701e4f16ed153d27cb7d
  backUrl: http://mlbdenet.nat300.top/auth/callback
  
wechat:
  open:
    componentAppId: "wx8f042090d19f8ee0"
    componentSecret: "755d16e3110aa06a3dd34d2f5c597ce2"
    componentToken: ""
    componentAesKey: ""      
